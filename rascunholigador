#define _GNU_SOURCE
#include <sys/types.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct ilc_struct ILC;

struct ilc_struct{
    int line;
    int size;
    int value;
    char* label_name;
};


void init_output(char* output[]);     //inicializar arquivo final.

void ReadModules(int NumModules, ILC* Module_ILC);

void order();       //ordena módulos e aloca os espaços para cada um

void atualizarlabels();     //?

void reloca();  //?


void init_output(char* output[])
{
    int i = 0;
    for(i = 0; i < 256; i++){
        output[i] = (char *) malloc(20*sizeof(char));
        strcpy(output[i], "00000000");
    }
}

void ReadModules(int NumModules, ILC* Module_ILC)
{
    char line[9];

    int TamModulo[NumModules];
    int i;
    for(i = 0; i < NumModules; i++)
    {
        //while(strcmp(getline(...), '00000000') != 0) TamModulo[i]++;
    }
}

int main()
{
    int NumModules;

    ILC* Module_ILC = (ILC*)malloc(sizeof(ILC) * NumModules);

    char** output = (char**)malloc(sizeof(char) * 256 * 30);
    init_output(output);


    return 0;
}
